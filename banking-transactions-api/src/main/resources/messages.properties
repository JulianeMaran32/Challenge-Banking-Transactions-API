# Mensagens de Validação (Bean Validation)
transaction.accountNumber.notBlank=O número da conta não pode estar em branco.
transaction.amount.notNull=O valor da transação não pode ser nulo.
transaction.amount.decimalMin=O valor da transação deve ser positivo.
transaction.type.notNull=O tipo da transação não pode ser nulo.
# Mensagens de Log (usadas com SLF4J)
log.transaction.batch.processing=Processando lote de {} transações.
log.transaction.batch.empty.null=Recebido lote de transações vazio ou nulo.
log.transaction.batch.completed=Lote de transações concluído.
log.transaction.processing.start=Iniciando processamento de transação para conta {}.
log.account.fetching.locking=Buscando e bloqueando conta: {}.
log.account.applying.operation=Aplicando operação {} de {} na conta {}.
log.account.saving=Salvando conta {}.
log.transaction.processed.success=Transação processada com sucesso para conta {}. Novo saldo: {}.
log.account.balance.fetching=Buscando saldo para conta: {}.
log.account.balance.found=Conta encontrada ao buscar saldo para {}. Saldo: {}.
log.initialization.start=Iniciando inicialização de dados...
log.initialization.attempt.create=Tentando criar conta se não existir: {}.
log.account.created=Conta '{}' criada com sucesso com saldo inicial: {}.
log.account.exists=Conta '{}' já existe. Pulando criação.
log.initialization.error.save=Erro ao salvar a conta '{}' durante a inicialização: {}.
log.initialization.completed=Inicialização de dados concluída.
log.controller.transaction.received=Recebida requisição para realizar lançamentos. Quantidade: {}.
log.controller.transaction.success=Lançamentos processados com sucesso.
log.controller.balance.received=Recebida requisição para obter saldo da conta: {}.
log.controller.balance.returned=Saldo da conta {} retornado: {}.
log.error.specific.transaction=Erro específico ao processar transação para conta {}: {}.
log.error.unexpected.transaction=Erro inesperado ao processar transação para conta {}: {}.
log.error.account.notfound.warning=Conta não encontrada: {} - Path: {}.
log.error.insufficient.funds.warning=Saldo insuficiente: {} - Path: {}.
log.error.illegal.argument.warning=Argumento inválido / Conteúdo não processável: {} - Path: {}.
log.error.data.integrity.violation.warning=Violação de integridade de dados: {} - Path: {}.
log.error.validation.warning=Erros de validação: {} - Path: {}.
log.error.type.mismatch.warning=Erro de tipo de parâmetro: {} - Path: {}.
log.error.bad.request.generic.warning=Requisição inválida: {} - Path: {}.
log.error.internal.unexpected.error=Ocorreu um erro inesperado: {} - Path: {}.
# Mensagens de Exceção e Erro (traduzidas no GlobalExceptionHandler ou usadas diretamente)
# Note: {0}, {1} etc. são placeholders para argumentos
# Exceções do domínio/aplicação (lançadas com mensagens simples, traduzidas pelo handler)
exception.account.notFound=Conta não encontrada: {0}
exception.insufficient.funds=Saldo insuficiente na conta {0} para debitar {1}
# IllegalArgumentException lançadas diretamente (tratar pelo conteúdo no handler)
exception.illegal.argument.creditAmountNull=Valor de crédito não pode ser nulo.
exception.illegal.argument.creditAmountPositive=Valor de crédito deve ser positivo.
exception.illegal.argument.debitAmountNull=Valor de débito não pode ser nulo.
exception.illegal.argument.debitAmountPositive=Valor de débito deve ser positivo.
exception.illegal.argument.transactionTypeNull=Tipo de transação não especificado.
exception.illegal.argument.transactionTypeInvalid=Tipo de transação inválido.
# etc. para todas as mensagens em Objects.requireNonNull e outros new IllegalArgumentException
# Mensagens genéricas ou específicas do GlobalExceptionHandler (usam MessageSource)
error.validation.message=Erros de validação: {0}
error.type.mismatch.message=Parâmetro '{0}' com tipo inválido. Valor recebido: '{1}'
error.bad.request.generic=Requisição inválida.
error.data.integrity.violation.generic=Violação de integridade de dados. Possível recurso duplicado ou conflito.
error.data.integrity.violation.unique=Recurso duplicado. Por favor, verifique os dados informados.
error.internal.server.generic=Ocorreu um erro interno no servidor. Por favor, tente novamente mais tarde.
error.internal.transaction.processing=Ocorreu um erro interno ao processar a transação para a conta {0}.
# Objects.requireNonNull messages - Adicionando chaves para estas também, embora o handler
# de IllegalArgumentException possa precisar inspecionar a mensagem original.
# Uma alternativa seria criar exceções customizadas mais específicas em vez de IllegalArgumentException.
validation.notNull.transaction=Transação não pode ser nula.
validation.notNull.accountNumber=Número da conta não pode ser nulo.
validation.notNull.initialBalance=Saldo inicial não pode ser nulo.
validation.notNull.creditAmount=Valor de crédito não pode ser nulo.
validation.notNull.debitAmount=Valor de débito não pode ser nulo.
validation.notNull.account=Conta não pode ser nula.
validation.notNull.amount=Valor não pode ser nulo.
validation.notNull.type=Tipo não pode ser nulo.
validation.notNull.accountMapper=Entidade Account não pode ser nula para mapeamento.